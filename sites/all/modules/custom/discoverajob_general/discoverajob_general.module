<?php

define('MAX_PROMOTED_NODES', 5);

/**
 * @file
 * General functionality
 */

/**
 * Implements hook_form_alter().
 */
function discoverajob_general_form_alter(&$form, &$form_state, $form_id) {
  // Added validate on user pass page and change label on field.
  if ($form_id == 'user_pass') {
    $form['name']['#title'] = t('E-mail address');
    array_unshift($form['#validate'], 'discoverajob_general_user_pass_validation');
  }

  // Added validate on job node form.
  if ($form_id == 'job_per_template_node_form') {
    array_unshift($form['#validate'], 'discoverajob_general_node_job_validate');
  }
}

/**
 * Validate user pass form.
 */
function discoverajob_general_user_pass_validation($form, &$form_state) {
  $email = trim($form_state['values']['name']);
  // Try to load user by email.
  $users = user_load_multiple(array(), array('mail' => $email, 'status' => '1'));
  $account = reset($users);
  if (!isset($account->uid)) {
    form_set_error('name', t('Sorry, %email is not recognized an e-mail address.', array('%email' => $email)));
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function discoverajob_general_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if ($root_path == 'user/%/edit' || $root_path == 'user/%') {
    // Hide 'View' tab on user profile page.
    unset($data['tabs'][0]['output'][0]);
  }
  if ($root_path == 'recruiter/applications' || $root_path == 'applications/shortlisted') {
    // Hide 'Rejected' tab on applications page.
    unset($data['tabs'][0]['output'][2]);
  }
}

/**
 * Validate job node form.
 */
function discoverajob_general_node_job_validate($form, &$form_state) {
  if ($form_state['values']['promote']) {
    $promoted_nodes = _discoverajob_general_promoted_nodes('job_per_template');
    if ($promoted_nodes && $promoted_nodes >= MAX_PROMOTED_NODES) {
      form_set_error('promoted', t('The maximum number of "Promoted on front page" is @count', array('@count' => MAX_PROMOTED_NODES)));
    }
  }
}

/**
 * Helper function which return number of promoted nodes.
 */
function _discoverajob_general_promoted_nodes($type) {
  $promoted_nodes = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('promote', 1)
    ->condition('type', $type)
    ->countQuery()
    ->execute()
    ->fetchField();

  return $promoted_nodes;
}

/**
 * Implements hook_views_pre_render().
 */
function discoverajob_general_views_pre_render(&$view) {
  if($view->name == "front_page_job_search") {
    if ($view->result) {
      foreach ($view->result as $key => $result) {
        if (!empty($result->entity)) {
          $node = node_load($result->entity);
            // Show only promoted to front page nodes.
            if (!$node->promote) {
              unset($view->result[$key]);
            }
        }   
      }
    }
  }
}

/**
 * Implements hook_block_info().
 */
function discoverajob_general_block_info() {
  $blocks = array();
  $blocks['fill_cv'] = array(
    'info' => t('Fill CV button'),
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function discoverajob_general_block_view($delta='') {
  $block = array();
  
  switch($delta) {
    case 'fill_cv' :
      $block['content'] = discoverajob_general_fill_cv_content();
      break;
  }

  return $block;
}

/**
 * Custom function to assemble renderable array for block content.
 * Returns a renderable array with the block content.
 * @return
 *   returns a renderable array of block content.
 */
function discoverajob_general_fill_cv_content() {
  global $user;
  $block = array();
  $path = '<front>';
  
  $image_path = base_path() . drupal_get_path('theme', 'cloudy') . "/images/button_cv.png";

  $image = theme_image(array(
    'path' => ($image_path),
    'alt' => t('Fill CV'),
    'title' => t('Fill CV'),
  ));
  $options = array(
    'html' => TRUE,
    'attributes' => array(
        'title' => t('Fill CV'),
        'class' => array('fill-cv'),
    )
  );
  if (user_is_anonymous()) {
    $path = 'user/register';
  }
  if (in_array('applicant', $user->roles)) {
    $path = 'profile-resume';
  }
  if (in_array('recruiter', $user->roles)) {
    return;
  }

  $button = l($image, $path, $options);

  // Block output in HTML.
  $block = array(
    'button' => array(
      '#type' => 'markup',
      '#markup' => $button,
    ),
  );

  return $block;
}